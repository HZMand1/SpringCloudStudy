1.工厂模设计（factory pattern）
是 Java 中最常用的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。

在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。
注意的是提示提供了一个共同的接口指向新创建的对象的，我们以伪代码的形式来实现下：
1.定义一支笔接口（implements），只有一个画（） 的方法
2.一些笔是可以画框框的，一些笔是需要画圆的；
画框框的笔 implements 笔, override 画（），我可以画框框了；
画圆的笔   implements 笔，override 画（），我可以画圈圈了；
3.创建工厂，根据所需返回画笔
笔Factory ,
我想画框框  new 画框框的笔 return
我想画圈圈  new 画圈圈的笔 return

实现：
画笔 笔 = 笔Factory(需要的笔类型);
笔.画（）；
