索引

所谓索引就是为特定的mysql字段进行一些特定的算法排序，比如二叉树的算法和哈希算法，哈希算法是通过建立特征值，然后根据特征值来快速查找。
而用的最多，并且是mysql默认的就是二叉树算法 （B+ tree），通过BTREE算法建立索引的字段，比如扫描20行就能得到未使用BTREE前扫描了2^20行的结果。

索引的类型：
1.UNIQUE唯一索引
不可以出现相同的值，可以有NULL值。
2.INDEX普通索引
允许出现相同的索引内容。
3.PRIMARY KEY主键索引
不允许出现相同的值，且不能为NULL值，一个表只能有一个primary_key索引。
4.fulltext index 全文索引
上述三种索引都是针对列的值发挥作用，但全文索引，可以针对值中的某个单词，比如一篇文章中的某个词，然而并没有什么卵用，
因为只有myisam以及英文支持，并且效率让人不敢恭维，但是可以用coreseek和xunsearch等第三方应用来完成这个需求。

创建索引的技巧
维度高的列创建索引：
1.数据列中不重复值出现的个数，这个数量越高，维度就越高。
2.如数据表中存在8行数据a,b ,c,d,a,b,c,d这个表的维度为4。
3.要为维度高的列创建索引，如性别和年龄，那年龄的维度就高于性别。
4.性别这样的列不适合创建索引，因为维度过低。

对 where,on,group by,order by 中出现的列使用索引：
1.对较小的数据列使用索引，这样会使索引文件更小，同时内存中也可以装载更多的索引键。
2.为较长的字符串使用前缀索引。
3.不要过多创建索引，除了增加额外的磁盘空间外，对于DML操作的速度影响很大，因为其每增删改一次就得从新建立索引。
4.使用组合索引，可以减少文件索引大小，在使用时速度要优于多个单列索引。

组合索引与前缀索引：


大数据表的优化：
1.优化索引， 通过建立合理高效的索引,提高查询的速度.
注意的是组合索引的最左规则
2.SQL优化
  组织优化SQL语句,使查询效率达到最优,在很多情况下要考虑索引的作用.
3. 水平拆表
如果表中的数据呈现出某一类特性,比如呈现时间特性,那么可以根据时间段将表拆分成多个。
比如按年划分、按季度划分、按月划分等等，查询时按时间段进行拆分查询，再把查询结果进行合并；
比如按地区将表拆分，不同地区的数据放在不同的表里面，然后对查询进行分拆，对查询结果进行合并。

4. 垂直拆表
将表按字段拆分成多个表，常用的字段放在一个表，不常用的字段或大字段放在另外一个表。
由于数据库每次查询都是以块为单位，而每块的容量是有限的，通常是十几K或几十K，将表按字段拆分后，
单次IO所能检索到的行数通常会提高很多，查询效率就能提高上去。

5. 建立中间表，以空间换时间
在有些情况下，是可以通过建立中间表来加快查询速度的，详情可看文章开头的例子。

6. 用内存缓存数据，以空间换时间
将常用而且不常修改的数据加载到内存中，直接从内存查询则可。
可以使用热门的缓存技术，如Memcache、Redis、Ehcache等。

7. 使用其他辅助技术
Solr:一种基于Lucene的JAVA搜索引擎技术
